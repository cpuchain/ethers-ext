globalThis.process?.browser||(globalThis.process={browser:!0,env:{}}),function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.ethersOpt=t():e.ethersOpt=t()}(self,(()=>(()=>{var e={277:()=>{},401:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};return(()=>{"use strict";n.r(a),n.d(a,{ARB_CHAIN:()=>He,ARB_GAS_LIMIT:()=>je,BrowserProvider:()=>et,CreateX__factory:()=>k,DEFAULT_GAS_LIMIT:()=>Ve,DEFAULT_GAS_LIMIT_BUMP:()=>qe,DEFAULT_GAS_PRICE_BUMP:()=>$e,ERC20__factory:()=>E,EnsResolver:()=>A,EthersBatcher:()=>Pe,FeeDataExt:()=>mt,GAS_LIMIT_FAILOVER:()=>Xe,GAS_PRICE_ORACLE_ADDRESS:()=>Re,IndexedDB:()=>nt,JsonRpcSigner:()=>Ke,MULTICALL_ADDRESS:()=>xe,Multicall__factory:()=>D,OFFCHAIN_ORACLE_ADDRESS:()=>st,OffchainOracle__factory:()=>L,OpGasPriceOracle__factory:()=>j,Permit2__factory:()=>X,Provider:()=>Tt,VoidSigner:()=>Je,Wallet:()=>ze,assert:()=>c,assertArgument:()=>d,base64ToBytes:()=>ue,base64ToHex:()=>ye,bufferToBytes:()=>re,bytesToBase64:()=>le,bytesToHex:()=>oe,chainNames:()=>t,chunk:()=>Z,compareBlockHashes:()=>Ie,concatBytes:()=>ie,createBatchRequest:()=>Ae,createBlockTags:()=>J,crypto:()=>ee,digest:()=>te,digestHex:()=>ne,ensRegistries:()=>r,ensReverseNode:()=>o,ensStaticResolvers:()=>s,ensUniversalResolvers:()=>i,ethers:()=>l,factories:()=>e,fetchBlockHashes:()=>ke,formatCallTrace:()=>we,formatFeeHistory:()=>tt,getBlockReceipts:()=>fe,getL1Fee:()=>Oe,getRateToEth:()=>ot,getSubInfo:()=>T,hexToBase64:()=>ce,hexToBytes:()=>se,isDeferred:()=>m,isHex:()=>de,isNode:()=>z,multiQueryFilter:()=>he,multicall:()=>Be,permit:()=>it,populateTransaction:()=>Qe,rBytes:()=>ae,range:()=>K,sleep:()=>Y,switchChain:()=>Ye,toFixedHex:()=>pe,traceBlock:()=>ve,traceTransaction:()=>Ce,wildcardResolvers:()=>p});var e={};n.r(e),n.d(e,{CreateX__factory:()=>k,ERC20__factory:()=>E,Multicall__factory:()=>D,OffchainOracle__factory:()=>L,OpGasPriceOracle__factory:()=>j,Permit2__factory:()=>X});const t={},r={1:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",11155111:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",8453:"0xB94704422c2a1E396835A571837Aa5AE53285a95",84532:"0x1493b2567056c2181630115660963E13A8E32735"},i={1:"0xce01f8eee7E479C928F8919abD53E553a36CeF67",11155111:"0xce01f8eee7E479C928F8919abD53E553a36CeF67"},s={...i,8453:"0xC6d566A56A1aFf6508b41f6c90ff131615583BCD",84532:"0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA"},o={8453:".80002105.reverse",84532:".80002105.reverse"},p=new Set(["0xce01f8eee7E479C928F8919abD53E553a36CeF67","0xC6d566A56A1aFf6508b41f6c90ff131615583BCD","0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA"]);var u=n(277);const l=globalThis?.ethers||u.ethers,{isHexString:y}=l;function c(e,t,n,a){if(!e)throw l.makeError(t,n,a)}function d(e,t,n,a){c(e,t,"INVALID_ARGUMENT",{argument:n,value:a})}function m(e){return e&&"object"==typeof e&&"getTopicFilter"in e&&"function"==typeof e.getTopicFilter&&e.fragment}async function T(e,t){let n,a=null;if(Array.isArray(t)){const a=function(t){if(y(t,32))return t;const n=e.getEvent(t);return d(n,"unknown fragment","name",t),n.topicHash};n=t.map((e=>null==e?null:Array.isArray(e)?e.map(a):a(e)))}else"*"===t?n=[null]:"string"==typeof t?y(t,32)?n=[t]:(a=e.getEvent(t),d(a,"unknown fragment","event",t),n=[a.topicHash]):m(t)?n=await t.getTopicFilter():"fragment"in t?(a=t.fragment,n=[a.topicHash]):d(!1,"unknown event name","event",t);return n=n.map((e=>{if(null==e)return null;if(Array.isArray(e)){const t=Array.from(new Set(e.map((e=>e.toLowerCase()))).values());return 1===t.length?t[0]:(t.sort(),t)}return e.toLowerCase()})),{fragment:a,tag:n.map((e=>null==e?"null":Array.isArray(e)?e.join("|"):e)).join("&"),topics:n}}const{EnsResolver:b,Contract:h,namehash:f,ZeroAddress:g,isError:w,getAddress:v,dnsEncode:C}=l;class A extends b{async supportsWildcard(){return!!p.has(this.address)||super.supportsWildcard()}static async getEnsAddress(e){const t=await e.getNetwork(),n=Number(t.chainId),a=t.getPlugin("org.ethers.plugins.network.Ens"),i=r[n]||a?.address;if(!i)throw new Error(`Network ${n} doesn't have ENS registry address specified`);return i}static async#e(e,t,n){const a=Number((await e.getNetwork()).chainId);if(s[a])return s[a];const r=await A.getEnsAddress(e);try{const a=new h(r,["function resolver(bytes32) view returns (address)"],e),i=await a.resolver(n||f(t||""),{enableCcipRead:!0});return i===g?null:i}catch(e){throw e}}static async fromName(e,t){let n=t;for(;;){if(""===n||"."===n)return null;if("eth"!==t&&"eth"===n)return null;const a=await A.#e(e,n);if(null!=a){const r=new A(e,a,t);return n===t||await r.supportsWildcard()?r:null}n=n.split(".").slice(1).join(".")}}static async lookupAddress(e,t,n=!0){try{t=v(t);const a=Number((await e.getNetwork()).chainId),r=t.substring(2).toLowerCase()+(o[a]||".addr.reverse"),s=f(r),p=await A.#e(e,"",s);if(null==p||p===g)return null;const u=new h(p,["function reverse(bytes) view returns (string memory, address, address, address)","function name(bytes32) view returns (string)"],e);if(i[a]){const e=C(r),[n,a]=await u.reverse(e);return n&&a===t?n:null}const l=await u.name(s);return l?n&&await e.resolveName(l)!==t?null:l:null}catch(e){if(w(e,"BAD_DATA")&&"0x"===e.value)return null;if(w(e,"CALL_EXCEPTION"))return null;throw e}}async getAddress(e){try{return await super.getAddress(e)}catch(e){if(w(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}async getText(e){try{return await super.getText(e)}catch(e){if(w(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}async getContentHash(){try{return await super.getContentHash()}catch(e){if(w(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}async getAvatar(){try{return await super.getAvatar()}catch(e){if(w(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}}const{Contract:P,Interface:x}=l,B=[{inputs:[{internalType:"address",name:"emitter",type:"address"}],name:"FailedContractCreation",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"},{internalType:"bytes",name:"revertData",type:"bytes"}],name:"FailedContractInitialisation",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"},{internalType:"bytes",name:"revertData",type:"bytes"}],name:"FailedEtherTransfer",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"}],name:"InvalidNonceValue",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"}],name:"InvalidSalt",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newContract",type:"address"},{indexed:!0,internalType:"bytes32",name:"salt",type:"bytes32"}],name:"ContractCreation",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newContract",type:"address"}],name:"ContractCreation",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newContract",type:"address"},{indexed:!0,internalType:"bytes32",name:"salt",type:"bytes32"}],name:"Create3ProxyContractCreation",type:"event"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes32",name:"initCodeHash",type:"bytes32"}],name:"computeCreate2Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes32",name:"initCodeHash",type:"bytes32"},{internalType:"address",name:"deployer",type:"address"}],name:"computeCreate2Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"address",name:"deployer",type:"address"}],name:"computeCreate3Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"computeCreate3Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"nonce",type:"uint256"}],name:"computeCreateAddress",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"deployer",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"}],name:"computeCreateAddress",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate2",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate2",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"deployCreate2Clone",outputs:[{internalType:"address",name:"proxy",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"deployCreate2Clone",outputs:[{internalType:"address",name:"proxy",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate3",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate3",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreateAndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreateAndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"deployCreateClone",outputs:[{internalType:"address",name:"proxy",type:"address"}],stateMutability:"payable",type:"function"}];class k{static abi=B;static createInterface(){return new x(B)}static connect(e,t){return new P(e,B,t)}}const{Contract:I,Interface:M}=l,F=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class E{static abi=F;static createInterface(){return new M(F)}static connect(e,t){return new I(e,F,t)}}const{Contract:S,Interface:R}=l,O=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3[]",name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3Value[]",name:"calls",type:"tuple[]"}],name:"aggregate3Value",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getBasefee",outputs:[{internalType:"uint256",name:"basefee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getChainId",outputs:[{internalType:"uint256",name:"chainid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"}];class D{static abi=O;static createInterface(){return new R(O)}static connect(e,t){return new S(e,O,t)}}const{Contract:N,Interface:_}=l,G=[{inputs:[{internalType:"contract MultiWrapper",name:"_multiWrapper",type:"address"},{internalType:"contract IOracle[]",name:"existingOracles",type:"address[]"},{internalType:"enum OffchainOracle.OracleType[]",name:"oracleTypes",type:"uint8[]"},{internalType:"contract IERC20[]",name:"existingConnectors",type:"address[]"},{internalType:"contract IERC20",name:"wBase",type:"address"},{internalType:"address",name:"owner_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"ArraysLengthMismatch",type:"error"},{inputs:[],name:"ConnectorAlreadyAdded",type:"error"},{inputs:[],name:"InvalidOracleTokenKind",type:"error"},{inputs:[],name:"MathOverflowedMulDiv",type:"error"},{inputs:[],name:"OracleAlreadyAdded",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[],name:"SameTokens",type:"error"},{inputs:[],name:"TooBigThreshold",type:"error"},{inputs:[],name:"UnknownConnector",type:"error"},{inputs:[],name:"UnknownOracle",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IERC20",name:"connector",type:"address"}],name:"ConnectorAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IERC20",name:"connector",type:"address"}],name:"ConnectorRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract MultiWrapper",name:"multiWrapper",type:"address"}],name:"MultiWrapperUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IOracle",name:"oracle",type:"address"},{indexed:!1,internalType:"enum OffchainOracle.OracleType",name:"oracleType",type:"uint8"}],name:"OracleAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IOracle",name:"oracle",type:"address"},{indexed:!1,internalType:"enum OffchainOracle.OracleType",name:"oracleType",type:"uint8"}],name:"OracleRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"contract IERC20",name:"connector",type:"address"}],name:"addConnector",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IOracle",name:"oracle",type:"address"},{internalType:"enum OffchainOracle.OracleType",name:"oracleKind",type:"uint8"}],name:"addOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"connectors",outputs:[{internalType:"contract IERC20[]",name:"allConnectors",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"}],name:"getRate",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"}],name:"getRateToEth",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateToEthWithCustomConnectors",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateToEthWithThreshold",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateWithCustomConnectors",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateWithThreshold",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRatesAndWeightsToEthWithCustomConnectors",outputs:[{internalType:"uint256",name:"wrappedPrice",type:"uint256"},{components:[{internalType:"uint256",name:"maxOracleWeight",type:"uint256"},{internalType:"uint256",name:"size",type:"uint256"},{components:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"}],internalType:"struct OraclePrices.OraclePrice[]",name:"oraclePrices",type:"tuple[]"}],internalType:"struct OraclePrices.Data",name:"ratesAndWeights",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRatesAndWeightsWithCustomConnectors",outputs:[{internalType:"uint256",name:"wrappedPrice",type:"uint256"},{components:[{internalType:"uint256",name:"maxOracleWeight",type:"uint256"},{internalType:"uint256",name:"size",type:"uint256"},{components:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"}],internalType:"struct OraclePrices.OraclePrice[]",name:"oraclePrices",type:"tuple[]"}],internalType:"struct OraclePrices.Data",name:"ratesAndWeights",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"multiWrapper",outputs:[{internalType:"contract MultiWrapper",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"oracles",outputs:[{internalType:"contract IOracle[]",name:"allOracles",type:"address[]"},{internalType:"enum OffchainOracle.OracleType[]",name:"oracleTypes",type:"uint8[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"connector",type:"address"}],name:"removeConnector",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IOracle",name:"oracle",type:"address"},{internalType:"enum OffchainOracle.OracleType",name:"oracleKind",type:"uint8"}],name:"removeOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract MultiWrapper",name:"_multiWrapper",type:"address"}],name:"setMultiWrapper",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"}];class L{static abi=G;static createInterface(){return new _(G)}static connect(e,t){return new N(e,G,t)}}const{Contract:W,Interface:U}=l,H=[{inputs:[],name:"DECIMALS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseFeeScalar",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"blobBaseFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"blobBaseFeeScalar",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"gasPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_data",type:"bytes"}],name:"getL1Fee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_unsignedTxSize",type:"uint256"}],name:"getL1FeeUpperBound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_data",type:"bytes"}],name:"getL1GasUsed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"isEcotone",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"isFjord",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"l1BaseFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"overhead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"scalar",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"setEcotone",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"setFjord",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class j{static abi=H;static createInterface(){return new U(H)}static connect(e,t){return new W(e,H,t)}}const{Contract:V,Interface:$}=l,q=[{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"}],name:"AllowanceExpired",type:"error"},{inputs:[],name:"ExcessiveInvalidation",type:"error"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"InsufficientAllowance",type:"error"},{inputs:[{internalType:"uint256",name:"maxAmount",type:"uint256"}],name:"InvalidAmount",type:"error"},{inputs:[],name:"InvalidContractSignature",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidSignature",type:"error"},{inputs:[],name:"InvalidSignatureLength",type:"error"},{inputs:[],name:"InvalidSigner",type:"error"},{inputs:[],name:"LengthMismatch",type:"error"},{inputs:[{internalType:"uint256",name:"signatureDeadline",type:"uint256"}],name:"SignatureExpired",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint160",name:"amount",type:"uint160"},{indexed:!1,internalType:"uint48",name:"expiration",type:"uint48"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"}],name:"Lockdown",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint48",name:"newNonce",type:"uint48"},{indexed:!1,internalType:"uint48",name:"oldNonce",type:"uint48"}],name:"NonceInvalidation",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint160",name:"amount",type:"uint160"},{indexed:!1,internalType:"uint48",name:"expiration",type:"uint48"},{indexed:!1,internalType:"uint48",name:"nonce",type:"uint48"}],name:"Permit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"word",type:"uint256"},{indexed:!1,internalType:"uint256",name:"mask",type:"uint256"}],name:"UnorderedNonceInvalidation",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint48",name:"newNonce",type:"uint48"}],name:"invalidateNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"wordPos",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"invalidateUnorderedNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"}],internalType:"struct IAllowanceTransfer.TokenSpenderPair[]",name:"approvals",type:"tuple[]"}],name:"lockdown",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"nonceBitmap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails[]",name:"details",type:"tuple[]"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitBatch",name:"permitBatch",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails",name:"details",type:"tuple"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitSingle",name:"permitSingle",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],internalType:"struct IAllowanceTransfer.AllowanceTransferDetails[]",name:"transferDetails",type:"tuple[]"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}];class X{static abi=q;static createInterface(){return new $(q)}static connect(e,t){return new V(e,q,t)}}var Q=n(401);BigInt.prototype.toJSON||(BigInt.prototype.toJSON=function(){return this.toString()});const z=!process?.browser&&void 0===globalThis.window;function J(e,t,n=1e3){const a=[];if(t-e>n)for(let r=e;r<t+1;r+=n){const e=r+n-1>t?t:r+n-1;a.push({fromBlock:r,toBlock:e})}else{if(!(t-e>=0))throw new Error(`Invalid block range ${e}~${t}`);a.push({fromBlock:e,toBlock:t})}return a}function K(e,t,n=1){return Array(Math.ceil((t-e)/n)+1).fill(e).map(((e,t)=>e+t*n))}function Z(e,t){return[...Array(Math.ceil(e.length/t))].map(((n,a)=>e.slice(t*a,t+t*a)))}function Y(e){return new Promise((t=>setTimeout(t,e)))}const ee=z?Q.webcrypto:globalThis.crypto;async function te(e,t="SHA-256"){return new Uint8Array(await ee.subtle.digest(t,e))}async function ne(e,t="SHA-256"){return oe(await te(se(e),t))}function ae(e=32){return ee.getRandomValues(new Uint8Array(e))}function re(e){return new Uint8Array(e.buffer)}function ie(...e){const t=e.reduce(((e,t)=>e+t.length),0),n=new Uint8Array(t);return e.forEach(((e,t,a)=>{const r=a.slice(0,t).reduce(((e,t)=>e+t.length),0);n.set(e,r)})),n}function se(e){let t="bigint"==typeof e?e.toString(16):e;return t.startsWith("0x")&&(t=t.slice(2)),t.length%2!=0&&(t="0"+t),Uint8Array.from(t.match(/.{1,2}/g).map((e=>parseInt(e,16))))}function oe(e){return"0x"+Array.from(e).map((e=>e.toString(16).padStart(2,"0"))).join("")}function pe(e,t=32){return"0x"+BigInt(e).toString(16).padStart(2*t,"0")}function ue(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0)))}function le(e){return btoa(e.reduce(((e,t)=>e+String.fromCharCode(t)),""))}function ye(e){return oe(ue(e))}function ce(e){return le(se(e))}function de(e){return/^0x[0-9a-fA-F]*$/.test(e)}const{EventLog:me,UndecodedEventLog:Te,Log:be}=l;async function he({address:e,provider:t,contract:n,event:a,fromBlock:r,toBlock:i}){!e&&n?e=n.target:"*"===e&&(e=void 0),!t&&n&&(t=n.runner),a||(a="*"),r||0===r||(r=0),i||0===i||(i="latest");let s=null,o=[null];n&&({fragment:s,topics:o}=await T(n.interface,a));const p={address:e,topics:o,fromBlock:r,toBlock:i};return c(t,"contract runner does not have a provider","UNSUPPORTED_OPERATION",{operation:"queryFilter"}),(await t.getLogs(p)).map((e=>{let a=s;if(null==a&&n)try{a=n.interface.getEvent(e.topics[0])}catch{}if(a&&n)try{return new me(e,n.interface,a)}catch(t){return new Te(e,t)}return new be(e,t)}))}async function fe(e,t,n){const a=n||await e.getNetwork(),r=e._getBlockTag(t),i=await e.send("eth_getBlockReceipts",[r]);if(!i)throw new Error(`No block receipts for ${t}`);return i.map((t=>e._wrapTransactionReceipt(t,a)))}const{getAddress:ge}=l;function we(e,t,n){return{from:e.from?ge(e.from):"",gas:Number(e.gas||0),gasUsed:Number(e.gasUsed||0),to:e.to?ge(e.to):"",input:e.input,output:e.output,calls:e.calls,value:BigInt(e.value||0),type:e.type,blockNumber:n.number,blockHash:n.hash||void 0,txHash:t}}async function ve(e,t,n=!1){const a=e._getBlockTag(t),r=66===a.length?"debug_traceBlockByHash":"debug_traceBlockByNumber",[i,s]=await Promise.all(["number"==typeof t?{number:t,hash:void 0}:e.getBlock(t),e.send(r,[a,{tracer:"callTracer",traceConfig:{onlyTopCall:n}}])]);if(!i)throw new Error(`Invalid block for ${t}`);if(!s)throw new Error(`No trace results for block ${t}`);return s.map((({txHash:e,result:t})=>we(t,e,i)))}async function Ce(e,t,n=!1,a){const[r,i]=await Promise.all([a||e.getTransaction(t),e.send("debug_traceTransaction",[t,{tracer:"callTracer",traceConfig:{onlyTopCall:n}}])]);if(!r)throw new Error(`Invalid tx for ${r}`);if(!i)throw new Error(`No trace results for tx ${t}`);return we(i,t,{number:r.blockNumber,hash:r.blockHash})}async function Ae(e={},t,n,a,r){const i=e.concurrencySize||10,s=e.retryMax||2,o=e.retryOn||500;let p=0;const u=[];for(const l of Z(n,i*r)){const i=Date.now(),y=(await Promise.all(Z(l,r).map((async(e,t)=>(await Y(40*t),(async()=>{let t,n=0;for(;n<=s;)try{return await Promise.all(e.map((e=>a(e))))}catch(e){n++,t=e,await Y(o)}throw t})()))))).flat();u.push(...y),p+=l.length,e.onProgress&&e.onProgress({type:t,chunkIndex:p,chunkLength:n.length,chunks:l,chunksResult:y,resultLength:y.flat().length}),e.delays&&Date.now()-i<e.delays&&await Y(e.delays-(Date.now()-i))}return u}class Pe{concurrencySize;blockBatch;txBatch;eventBatch;eventRange;delays;retryMax;retryOn;onProgress;constructor({concurrencySize:e,blockBatch:t,txBatch:n,eventBatch:a,eventRange:r,delays:i,retryMax:s,retryOn:o,onProgress:p}){this.concurrencySize=e||10,this.blockBatch=t||10,this.txBatch=n||this.blockBatch,this.eventBatch=a||3,this.eventRange=r||5e3,this.delays=i,this.retryMax=s||2,this.retryOn=o||500,this.onProgress=p}async createBatchRequest(e,t,n,a){return Ae(this,e,t,n,a)}async getBlocks(e,t,n){return await this.createBatchRequest("Blocks",t,(async t=>{const a=await e.getBlock(t,n);if(!a)throw new Error(`No block for ${t}`);return a}),this.blockBatch)}async getTransactions(e,t){return await this.createBatchRequest("Transactions",t,(async t=>{const n=await e.getTransaction(t);if(!n)throw new Error(`No tx for ${t}`);return n}),this.txBatch)}async getTransactionReceipts(e,t){return await this.createBatchRequest("TransactionReceipts",t,(async t=>{const n=await e.getTransactionReceipt(t);if(!n)throw new Error(`No tx for ${t}`);return n}),this.txBatch)}async getBlockReceipts(e,t){const n=await e.getNetwork();return(await this.createBatchRequest("BlockReceipts",t,(async t=>fe(e,t,n)),this.blockBatch)).flat()}async traceBlock(e,t,n){return(await this.createBatchRequest("InternalTransactions",t,(async t=>ve(e,t,n)),this.blockBatch)).flat()}async traceTransaction(e,t,n){return await this.createBatchRequest("InternalTransactions",t,(async t=>Ce(e,t,n)),this.txBatch)}async getEvents({address:e,provider:t,contract:n,event:a="*",fromBlock:r=0,toBlock:i}){i||(i=await(t||n?.runner).getBlockNumber());const s=[];for(let e=r;e<i;e+=this.eventRange){const t=e+this.eventRange-1>i?i:e+this.eventRange-1;s.push({fromBlock:e,toBlock:t})}return(await this.createBatchRequest("Events",s,(async({fromBlock:r,toBlock:i})=>e||!n?await he({address:e,provider:t,contract:n,event:a,fromBlock:r,toBlock:i}):await n.queryFilter(a,r,i)),this.eventBatch)).flat()}}const xe="0xcA11bde05977b3631167028862bE2a173976CA11";async function Be(e,t,n={}){const a=t.map((({contract:e,address:t,interface:n,name:a,params:r,allowFailure:i})=>({target:e?.target||t,callData:(e?.interface||n).encodeFunctionData(a,r),allowFailure:i??!1})));return(await e.aggregate3.staticCall(a,n)).map((([e,n],a)=>{const{contract:r,interface:i,name:s}=t[a],o=e&&"0x"!==n?(r?.interface||i).decodeFunctionResult(s,n):n;return Array.isArray(o)&&1===o.length?o[0]:o}))}async function ke(e,t,n=80){const a=e.multicall||D.connect(xe,e),r=await e.getBlockNumber();return t||(t=r),await Promise.all(K(t+1-n,t).map((async t=>{if(!(t+100<=r))try{return{number:t,hash:await a.getBlockHash(t)}}catch{}const{hash:n}=await e.getBlock(t)||{};if(!n)throw new Error(`Block hash ${t} not available`);return{number:t,hash:n}})))}function Ie(e,t){e=e.sort(((e,t)=>e.number-t.number));for(const n of e){const e=t.find((e=>e.number===n.number));if(e?.hash&&e.hash!==n.hash)return n.number}}const{Transaction:Me,parseUnits:Fe,parseEther:Ee,ZeroAddress:Se}=l,Re="0x420000000000000000000000000000000000000F";async function Oe(e,t){const{unsignedSerialized:n}=Me.from({chainId:t?.chainId||10000n,data:t?.data||"0x",gasLimit:t?.gasLimit||1e7,gasPrice:t?.gasPrice||Fe("10000","gwei"),nonce:t?.nonce||1e5,to:t?.to instanceof Promise?await(t?.to):t?.to||Se,type:t?.type||0,value:t?.value||Ee("10000")});return 13n*await e.getL1Fee(n)/10n}const{resolveProperties:De,Wallet:Ne,HDNodeWallet:_e,Transaction:Ge,TransactionResponse:Le,VoidSigner:We,JsonRpcSigner:Ue}=l,He=42161n,je=5000000n,Ve=500000n,$e=2,qe=1.3,Xe=2000000n;async function Qe(e,t={}){const n=e.appProvider||e.provider,a=e.address||await e.getAddress(),r=await(e.gasPriceBump?.())||$e,i=await(e.gasLimitBump?.())||qe,s=await(e.customPriorityFee?.());if(t.from){if(t.from!==a)throw new Error("Wrong signer for transaction")}else t.from=a;const[o,p,u,l,y]=await Promise.all([t.chainId?void 0:n.getNetwork().then((({chainId:e})=>e)),"bigint"==typeof t.maxFeePerGas||"bigint"==typeof t.gasPrice?void 0:n.getFeeData(),"number"==typeof t.nonce?void 0:n.getTransactionCount(a,"pending"),"bigint"!=typeof t.txCost&&e.autoValue?(n.multicall?.getEthBalance||n.getBalance)(a):void 0,t.l1Fee||!e.opGasPriceOracle?0n:Oe(e.opGasPriceOracle,t)]);"bigint"==typeof o&&(t.chainId=o);let c=0n;if(p)if(p.maxFeePerGas){t.type||(t.type=2);const e="bigint"==typeof t.maxPriorityFeePerGas?t.maxPriorityFeePerGas:s??(p.maxPriorityFeePerGas||0n),n=p.maxFeePerGas<=e?e+10n:p.maxFeePerGas;t.maxFeePerGas=BigInt(Math.floor(Number(n)*r)),t.maxPriorityFeePerGas=e,delete t.gasPrice,c=t.maxFeePerGas+t.maxPriorityFeePerGas}else"bigint"==typeof p.gasPrice&&(t.type||0===t.type||(t.type=0),t.gasPrice=p.gasPrice,delete t.maxFeePerGas,delete t.maxPriorityFeePerGas,c=t.gasPrice);else c=t.maxFeePerGas?BigInt(t.maxFeePerGas)+BigInt(t.maxPriorityFeePerGas||0n):BigInt(t.gasPrice||0n);if("number"==typeof u&&(t.nonce=u),l&&BigInt(t.value||0)>=l){t.chainId===He?t.value=l-(c*je+y):t.value=l-(c*Ve+y);const e=await n.estimateGas(t);t.gasLimit=21000n!==e?BigInt(Math.floor(Number(e)*i)):e,t.value=l-(c*t.gasLimit+y)}if(!t.gasLimit)try{const e=await n.estimateGas(t);t.gasLimit=21000n!==e?BigInt(Math.floor(Number(e)*i)):e}catch(n){if(!e.gasLimitFailover)throw n;t.gasLimit=Xe}return y&&(t.l1Fee=y),t.txCost||(t.txCost=c*BigInt(t.gasLimit)+y),De(t)}class ze extends Ne{autoValue;gasPriceBump;gasLimitBump;customPriorityFee;gasLimitFailover;opGasPriceOracle;constructor(e,t,n={}){super(e,t),this.autoValue=n.autoValue||!1,this.gasPriceBump=n.gasPriceBump,this.gasLimitBump=n.gasLimitBump,this.customPriorityFee=n.customPriorityFee,this.gasLimitFailover=n.gasLimitFailover??!1,this.opGasPriceOracle=n.opGasPriceOracle?j.connect(n.opGasPriceOracle,t):void 0}static fromMnemonic(e,t,n=0,a){const r=`m/44'/60'/0'/0/${n}`,{privateKey:i}=_e.fromPhrase(e,void 0,r);return new ze(i,t,a)}populateTransaction(e){return Qe(this,e)}}class Je extends We{autoValue;gasPriceBump;gasLimitBump;customPriorityFee;gasLimitFailover;opGasPriceOracle;constructor(e,t,n={}){super(e,t),this.autoValue=n.autoValue||!1,this.gasPriceBump=n.gasPriceBump,this.gasLimitBump=n.gasLimitBump,this.customPriorityFee=n.customPriorityFee,this.gasLimitFailover=n.gasLimitFailover??!1,this.opGasPriceOracle=n.opGasPriceOracle?j.connect(n.opGasPriceOracle,t):void 0}populateTransaction(e){return Qe(this,e)}async sendTransaction(e){const t=Ge.from({...await this.populateTransaction(e),from:void 0});return new Le({...t,blockNumber:null,blockHash:null,hash:t.unsignedSerialized,index:0},this.provider)}}class Ke extends Ue{autoValue;gasPriceBump;gasLimitBump;customPriorityFee;gasLimitFailover;opGasPriceOracle;appProvider;constructor(e,t){super(e,t);const n=e.options||{};this.autoValue=n.autoValue||!1,this.gasPriceBump=n.gasPriceBump,this.gasLimitBump=n.gasLimitBump,this.customPriorityFee=n.customPriorityFee,this.gasLimitFailover=n.gasLimitFailover??!1,this.opGasPriceOracle=n.opGasPriceOracle?j.connect(n.opGasPriceOracle,e.appProvider||e):void 0,this.appProvider=e.appProvider}populateTransaction(e){return Qe(this,e)}async sendUncheckedTransaction(e){return super.sendUncheckedTransaction(await Qe(this,e))}}const{BrowserProvider:Ze}=l;async function Ye(e,t,n){try{await t.request({method:"wallet_switchEthereumChain",params:[{chainId:`0x${BigInt(e).toString(16)}`}]})}catch(a){if(4902!==a.code&&!t.isTrust)throw a;await t.request({method:"wallet_addEthereumChain",params:[{chainId:`0x${BigInt(e).toString(16)}`,chainName:n?.chainName||"Ethereum",nativeCurrency:{name:n?.chainName||"Ethereum",symbol:n?.chainSymbol||"ETH",decimals:18},rpcUrls:n?.rpcUrl?[n.rpcUrl]:[],blockExplorerUrls:[n?.explorerUrl||"https://etherscan.io"]}]})}}class et extends Ze{ethereum;appProvider;options;chainChanged;accountsChanged;disconnect;constructor(e,t,n){super(e,t?._network,n),this.ethereum=e,this.appProvider=t,this.options=n,this.chainChanged=n?.chainChanged,this.accountsChanged=n?.accountsChanged,this.disconnect=n?.disconnect}async getSigner(e){const[{address:t},n]=await Promise.all([super.getSigner(e),super.send("eth_chainId",[]).then((e=>BigInt(e)))]),a=this.appProvider?._network.chainId;return a&&n!==a&&await Ye(a,this.ethereum,this.options),this.chainChanged&&this.ethereum.on("chainChanged",this.chainChanged),this.accountsChanged&&this.ethereum.on("accountsChanged",this.accountsChanged),this.disconnect&&this.ethereum.on("disconnect",this.disconnect),new Ke(this,t)}static discoverProviders(e,t){return new Promise((n=>{const a=[],r=e=>{a.push(e.detail)};setTimeout((()=>{const i=a.map((({info:n,provider:a})=>new et(a,e,{...t,providerInfo:n})));window?.removeEventListener("eip6963:announceProvider",r),n(i)}),300),window?.addEventListener("eip6963:announceProvider",r),window?.dispatchEvent(new Event("eip6963:requestProvider"))}))}}function tt(e,t,n){let a=Number(e.oldestBlock??0),r=0;const i=[];for(;a<Number(e.oldestBlock??0)+t;)i.push({number:a,gasUsedRatio:Number(e.gasUsedRatio?.[r]??0),baseFeePerGas:BigInt(e.baseFeePerGas?.[r]??0),priorityFeePerGas:e.reward?.[r]?.map((e=>BigInt(e)))||[]}),a++,r++;n&&i.push({number:"pending",gasUsedRatio:NaN,baseFeePerGas:BigInt(e.baseFeePerGas?.[t]??0),priorityFeePerGas:[]});const{baseFeePerGasAvg:s,priorityFeePerGasAvg:o}=i.reduce(((e,t,n)=>(e.baseFeePerGasAvg+=t.baseFeePerGas,t.priorityFeePerGas.forEach(((t,n)=>{e.priorityFeePerGasAvg[n]||(e.priorityFeePerGasAvg[n]=0n),t&&(e.priorityFeePerGasAvg[n]+=t)})),(i.length=n+1)&&(e.baseFeePerGasAvg=e.baseFeePerGasAvg/BigInt(i.length),e.priorityFeePerGasAvg=e.priorityFeePerGasAvg.map((e=>e?e/BigInt(i.length):0n))),e)),{baseFeePerGasAvg:0n,priorityFeePerGasAvg:[]});return{blocks:i,baseFeePerGasAvg:s,priorityFeePerGasAvg:o}}class nt{name;version;options;db;constructor({name:e,version:t=1,stores:n=[]}){this.name=e,this.version=t,-1===n.findIndex((({name:e})=>"keyStore"===e))&&n.push({name:"keyStore"}),this.options={upgrade(e){Object.values(e.objectStoreNames).forEach((t=>{e.deleteObjectStore(t)})),n.forEach((({name:t,keyPath:n,indexes:a})=>{const r=e.createObjectStore(t,{keyPath:n,autoIncrement:!0});Array.isArray(a)&&a.forEach((({name:e,unique:t=!1})=>{r.createIndex(e,e,{unique:t})}))}))}},this.db=this.openDB()}async openDB(){try{if(!window?.idb)return void console.log("IDB library is not available!");const e=await window.idb.openDB(this.name,this.version,this.options);return e.addEventListener("onupgradeneeded",(async()=>{await this.deleteDB()})),e}catch(e){if(e.message.includes("A mutation operation was attempted on a database that did not allow mutations."))return void console.log("The browser does not support IndexedDB");if(e.message.includes("less than the existing version"))return console.log(`Upgrading DB ${this.name} to ${this.version}`),void await this.deleteDB();console.log(`openDB error: ${e.message}`)}}async deleteDB(){await(window?.idb?.deleteDB(this.name)),this.db=this.openDB(),await this.db}async getItem({storeName:e,key:t}){try{const n=await this.db;if(!n)return;const a=n.transaction(e).objectStore(e);return await a.get(t)}catch(e){throw new Error(`getItem error: ${e.message}`)}}async addItem({storeName:e,key:t,data:n}){try{const a=await this.db;if(!a)return;const r=a.transaction(e,"readwrite");await r.objectStore(e).get(t)||await r.objectStore(e).add(n)}catch(e){throw new Error(`addItem error: ${e.message}`)}}async putItem({storeName:e,key:t="",data:n}){try{const a=await this.db;if(!a)return;const r=a.transaction(e,"readwrite");await r.objectStore(e).put(n,t)}catch(e){throw new Error(`putItem error: ${e.message}`)}}async deleteItem({storeName:e,key:t}){try{const n=await this.db;if(!n)return;const a=n.transaction(e,"readwrite");await a.objectStore(e).delete(t)}catch(e){throw new Error(`putItem error: ${e.message}`)}}async getAll({storeName:e}){try{const t=await this.db;if(!t)return[];const n=t.transaction(e,"readonly");return await n.objectStore(e).getAll()}catch(e){throw new Error(`getAll error: ${e.message}`)}}async clearStore({storeName:e}){try{const t=await this.db;if(!t)return;const n=t.transaction(e,"readwrite");await n.objectStore(e).clear()}catch(e){throw new Error(`clearStore error: ${e.message}`)}}async createTransactions({storeName:e,data:t}){try{const n=await this.db;if(!n)return;const a=n.transaction(e,"readwrite");await a.objectStore(e).add(t),await a.done}catch(e){throw new Error(`Method createTransactions has error: ${e.message}`)}}async createMultipleTransactions({storeName:e,data:t,index:n}){try{const a=await this.db;if(!a)return;const r=a.transaction(e,"readwrite");for(const e of t)e&&await r.store.put({...e,...n})}catch(e){throw new Error(`Method createMultipleTransactions has error: ${e.message}`)}}get(e){return this.getItem({storeName:"keyStore",key:e})}set(e,t){return this.putItem({storeName:"keyStore",key:e,data:t})}del(e){return this.deleteItem({storeName:"keyStore",key:e})}}const{Signature:at,MaxUint256:rt}=l;async function it(e,t,n=rt,a=rt){const r=e,i=r.runner,[s,o,{chainId:p}]=await Promise.all([r.name(),r.nonces(i.address),i.provider.getNetwork()]);return at.from(await i.signTypedData({name:s,version:"1",chainId:p,verifyingContract:r.target},{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},{owner:i.address,spender:t,value:n,nonce:o,deadline:a}))}const st="0x00000000000D6FFc74A8feb35aF5827bf57f6786";async function ot(e,t){const n=t,[a,r]=await Promise.all([n.decimals(),e.getRateToEth(n.target,!0)]);return r*10n**a/10n**18n}const{AbiCoder:pt,JsonRpcProvider:ut,Network:lt,FeeData:yt,defineProperties:ct}=l;function dt(e){return null==e?null:e.toString()}class mt extends yt{maxPriorityFeePerGasSlow;maxPriorityFeePerGasMedium;constructor(e,t,n,a,r){super(e,t,n),ct(this,{gasPrice:"bigint"==typeof e?e:null,maxFeePerGas:"bigint"==typeof t?t:null,maxPriorityFeePerGas:"bigint"==typeof n?n:null,maxPriorityFeePerGasSlow:"bigint"==typeof a?a:null,maxPriorityFeePerGasMedium:"bigint"==typeof r?r:null})}toJSON(){return{_type:"FeeData",gasPrice:dt(this.gasPrice),maxFeePerGas:dt(this.maxFeePerGas),maxPriorityFeePerGas:dt(this.maxPriorityFeePerGas),maxPriorityFeePerGasSlow:dt(this.maxPriorityFeePerGasSlow),maxPriorityFeePerGasMedium:dt(this.maxPriorityFeePerGasMedium)}}}class Tt extends ut{staticNetwork;#t;ensResolver;feeHistory;multicall;multicallAllowFailure;multicallMaxCount;multicallStallTime;multicallQueue;multicallTimer;constructor(e,n,a){const r=a?.multicallStallTime??30;super(e,n,{...a||{},batchStallTime:r+(a?.batchStallTime??10)}),this.feeHistory=a?.feeHistory??!1,this.staticNetwork=(async()=>{if(n)return lt.from(n);const t=lt.from(await new ut(e).getNetwork());if(a?.chainId&&BigInt(t.chainId)!==BigInt(a.chainId))throw new Error("Wrong network");return this.#t=t,t})(),this.ensResolver=this.staticNetwork.then((({chainId:e})=>{const n=t[Number(e)]||"ENS";if(a?.ensResolver)return a.ensResolver;if("ENS"===n)return A;throw new Error("Unsupported EMS type")})),this.multicall=D.connect(a?.multicall||xe,this),this.multicallAllowFailure=a?.multicallAllowFailure??!0,this.multicallMaxCount=a?.multicallMaxCount??1e3,this.multicallStallTime=r,this.multicallQueue=[],this.multicallTimer=null}get _network(){return c(this.#t,"network is not available yet","NETWORK_ERROR"),this.#t}async _detectNetwork(){try{return await this.staticNetwork}catch(e){throw super.destroyed||super.destroy(),e}}async getFeeData(){const[e,t,n,[a,r]]=await Promise.all([(async()=>{try{return BigInt(await this.send("eth_gasPrice",[]))}catch{return 0n}})(),(async()=>{const e=await this.getBlock("latest");return e?.baseFeePerGas??null})(),(async()=>{try{return BigInt(await this.send("eth_maxPriorityFeePerGas",[]))}catch{return 0n}})(),(async()=>{try{if(!this.feeHistory)return[null,null];const e=10,{priorityFeePerGasAvg:t}=tt(await this.send("eth_feeHistory",[e,"pending",[10,25]]),e);return[t[0],t[1]]}catch{return[null,null]}})()]);return new mt(e,t,n,a,r)}async getResolver(e){return(await this.ensResolver).fromName(this,e)}async lookupAddress(e,t){return(await this.ensResolver).lookupAddress(this,e,t)}async wait(e){try{if(!e)return null;const t=e?.hash||e;return await this.waitForTransaction(t,1,6e4)}catch{return null}}async getBlockReceipts(e){return fe(this,e,this.#t)}async traceBlock(e,t){return ve(this,e,t)}async traceTransaction(e,t){return Ce(this,e,t)}async _drainCalls(){try{(await Promise.all(Z(this.multicallQueue,this.multicallMaxCount).map((async(e,t)=>(await Y(40*t),await this.multicall.aggregate3.staticCall(e.map((({request:{to:e,data:t}})=>({target:e,callData:t,allowFailure:this.multicallAllowFailure}))))))))).flat().forEach((([e,t],n)=>{this.multicallQueue[n].resolve({status:e,data:t}),this.multicallQueue[n].resolved=!0}))}catch(e){this.multicallQueue.forEach((t=>{t.reject(e),t.resolved=!0}))}this.multicallQueue=this.multicallQueue.filter((({resolved:e})=>!e)),this.multicallQueue.length?this._drainCalls():this.multicallTimer=null}_queueCall(e,t="0x"){return this.multicallTimer||(this.multicallTimer=setTimeout((()=>{this._drainCalls()}),this.multicallStallTime)),new Promise(((n,a)=>{this.multicallQueue.push({request:{to:e,data:t},resolve:n,reject:a,resolved:!1})}))}async _perform(e){if("call"===e.method&&this.multicallMaxCount>0){const{from:t,to:n,value:a,data:r,blockTag:i}=e.transaction,s=n===this.multicall.target&&r?.startsWith("0x82ad56cb");if(!t&&n&&!a&&(!i||"latest"===i)&&!s){const{status:e,data:t}=await this._queueCall(n,r);if(e)return t;throw pt.getBuiltinCallException("call",{to:n,data:r},t)}}return super._perform(e)}}})(),a})()));